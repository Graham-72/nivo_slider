<?php
/**
 * @file
 * Primarily Drupal hooks.
 */

// Include the banner generation functions
include_once('banners.inc');

/**
 * Implements hook_permission().
 */
function nivo_slider_permission() {
  return array(
    'administer nivo slider' => array(
      'title' => t('Administer Nivo Slider'),
      'description' => t('Allows a user to configure Nivo Slider.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function nivo_slider_menu() {
  $items['admin/structure/nivo-slider'] = array(
    'title' => 'Nivo Slider',
    'description' => 'Configure slider content and options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nivo_slider_slide_configuration_form'),
    'access arguments' => array('administer nivo slider'),
    'file' => 'nivo_slider_slides.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/nivo-slider/slides'] = array(
    'title' => 'Slides',
    'description' => 'Configure slider content.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nivo_slider_slide_configuration_form'),
    'access arguments' => array('administer nivo slider'),
    'file' => 'nivo_slider_slides.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/structure/nivo-slider/options'] = array(
    'title' => 'Options',
    'description' => 'Configure slider options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nivo_slider_option_configuration_form'),
    'access arguments' => array('administer nivo slider'),
    'file' => 'nivo_slider_options.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  return $items;
}

/**
 * Implements hook_help().
 */
function nivo_slider_help($path, $arg) {
  switch ($path) {
    case 'admin/structure/nivo-slider':
      $output = '';
      $output .= '<p>' . t('Configure slider content.') . '</p>';
      return $output;
    case 'admin/structure/nivo-slider/slides':
      $output = '';
      $output .= '<p>' . t('Configure slider content.') . '</p>';
      return $output;
    case 'admin/structure/nivo-slider/option':
      $output = '';
      $output .= '<p>' . t('Configure slider options.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_image_default_styles().
 */
function nivo_slider_image_default_styles() {
  $styles = array();

  $styles['nivo_slider_slide'] = array(
    'effects' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 980,
          'height' => 185,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
  );
  return $styles;
}

/**
 * Implementation of hook_nivo_slider_theme().
 */
function nivo_slider_nivo_slider_theme() {
  $library_path = libraries_get_path('nivo-slider');

  return array(
    'default' => array(
      'name' => t('Default'),
      'description' => t('The default Nivo Slider theme.'),
      'path' => array(
        'css' => $library_path . '/themes/default/',
      ),
    ),
    'orman' => array(
      'name' => t('Orman'),
      'description' => t('Description of Orman style.'),
      'path' => array(
        'css' => $library_path . '/themes/orman/',
      ),
    ),
    'pascal' => array(
      'name' => t('Pascal'),
      'description' => t('Description of Orman style.'),
      'path' => array(
        'css' => $library_path . '/themes/pascal/',
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function nivo_slider_block_info() {
  $blocks['nivo_slider'] = array(
    'info' => t('Nivo Slider'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nivo_slider_block_view($delta = '') {
  switch ($delta) {
    case 'nivo_slider':
      $themes = module_invoke_all('nivo_slider_theme');
      $available_themes = array();

      // Create a list of the currently available themes and their properties
      foreach ($themes as $i => $theme) {
        if (file_exists($theme['path']['css'] . $i . '.css')) {
          $available_themes[$i]['name'] = $theme['name'];
          $available_themes[$i]['description'] = $theme['description'];
          $available_themes[$i]['path']['css'] = $theme['path']['css'];
          $available_themes[$i]['path']['js'] = $theme['path']['js'];
        }
      }

      // Add slider resources
      $library_path = libraries_get_path('nivo-slider');
      $current_theme = variable_get('nivo_slider_theme', 'default');

      // CSS
      // If the theme specifies a CSS file, include it in addition to the default CSS file
      drupal_add_css($library_path . '/nivo-slider.css');

      $theme_css = $available_themes[$current_theme]['path']['css'] . $current_theme . '.css';
      if (file_exists($theme_css)) {
        drupal_add_css($theme_css);
      }

      // JS
      // If a theme specifies a JS file, include it instead of the default JS file
      $theme_js = $available_themes[$current_theme]['path']['js'] . $current_theme . '.js';

      if (file_exists($theme_js)) {
        drupal_add_js($theme_js);
      }
      else {
        drupal_add_js($library_path . '/jquery.nivo.slider.pack.js');
      }

      // Add module resources
      $module_path = drupal_get_path('module', 'nivo_slider');

      drupal_add_css($module_path . '/css/nivo_slider.css');
      drupal_add_js($module_path . '/js/nivo_slider.js');

      // Settings
      drupal_add_js(array(
        'nivo_slider' => array(
          'effect' => variable_get('nivo_slider_effect', 'random'),
          'slices' => variable_get('nivo_slider_slices', 15),
          'boxCols' => variable_get('nivo_slider_box_columns', 8),
          'boxRows' => variable_get('nivo_slider_box_rows', 4),
          'animSpeed' => variable_get('nivo_slider_animation_speed', 500),
          'pauseTime' => variable_get('nivo_slider_pause_time', 3000),
          'startSlide' => variable_get('nivo_slider_start_slide', 0),
          'directionNav' => variable_get('nivo_slider_directional_navigation', 'true') == 'true' ? TRUE : FALSE,
          'directionNavHide' => variable_get('nivo_slider_directional_navigation_hide', 'true') == 'true' ? TRUE : FALSE,
          'controlNav' => variable_get('nivo_slider_control_navigation', 'true') == 'true' ? TRUE : FALSE,
          'keyboardNav' => variable_get('nivo_slider_keyboard_navigation', 'true') == 'true' ? TRUE : FALSE,
          'pauseOnHover' => variable_get('nivo_slider_pause_on_hover', 'true') == 'true' ? TRUE : FALSE,
          'manualAdvance' => variable_get('nivo_slider_manual_advance', 'false') == 'true' ? TRUE : FALSE,
          'captionOpacity' => variable_get('nivo_slider_caption_opacity', 0.8),
          'prevText' => variable_get('nivo_slider_previous_text', t('Prev')),
          'nextText' => variable_get('nivo_slider_next_text', t('Next')),
          'randomStart' => variable_get('nivo_slider_random_start', 'false') == 'true' ? TRUE : FALSE,
          )
        ),
        'setting'
      );

      // Get banners
      $banners = nivo_slider_show_banners();

      $output = '';
      $output .= '<div class="slider-wrapper theme-' . variable_get('nivo_slider_theme', $available_themes) . '">';
        $output .= '<div id="slider" class="nivoSlider">';
          $output .= nivo_slider_banners_markup($banners);
        $output .= '</div>';
      $output .= '</div>';
      
      $block['content'] = $output;
      break;
  }
  return $block;
}
